//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.8
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from /home/mahmoud/projects/AraCCompilerAntlrVariant/AntlrExamples/arac.g4 by ANTLR 4.8

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace Parser {
using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="aracParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.8")]
[System.CLSCompliant(false)]
public interface IaracListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="aracParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterProgram([NotNull] aracParser.ProgramContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="aracParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitProgram([NotNull] aracParser.ProgramContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="aracParser.globalVarDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGlobalVarDecl([NotNull] aracParser.GlobalVarDeclContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="aracParser.globalVarDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGlobalVarDecl([NotNull] aracParser.GlobalVarDeclContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="aracParser.inititalization"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInititalization([NotNull] aracParser.InititalizationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="aracParser.inititalization"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInititalization([NotNull] aracParser.InititalizationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="aracParser.functionDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunctionDecl([NotNull] aracParser.FunctionDeclContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="aracParser.functionDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunctionDecl([NotNull] aracParser.FunctionDeclContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="aracParser.operationDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOperationDecl([NotNull] aracParser.OperationDeclContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="aracParser.operationDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOperationDecl([NotNull] aracParser.OperationDeclContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="aracParser.parameter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParameter([NotNull] aracParser.ParameterContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="aracParser.parameter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParameter([NotNull] aracParser.ParameterContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="aracParser.paramList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParamList([NotNull] aracParser.ParamListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="aracParser.paramList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParamList([NotNull] aracParser.ParamListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="aracParser.argument"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArgument([NotNull] aracParser.ArgumentContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="aracParser.argument"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArgument([NotNull] aracParser.ArgumentContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="aracParser.argumentList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArgumentList([NotNull] aracParser.ArgumentListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="aracParser.argumentList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArgumentList([NotNull] aracParser.ArgumentListContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>divideExpr</c>
	/// labeled alternative in <see cref="aracParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDivideExpr([NotNull] aracParser.DivideExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>divideExpr</c>
	/// labeled alternative in <see cref="aracParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDivideExpr([NotNull] aracParser.DivideExprContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>AddressExpr</c>
	/// labeled alternative in <see cref="aracParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAddressExpr([NotNull] aracParser.AddressExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>AddressExpr</c>
	/// labeled alternative in <see cref="aracParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAddressExpr([NotNull] aracParser.AddressExprContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>negationExpr</c>
	/// labeled alternative in <see cref="aracParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNegationExpr([NotNull] aracParser.NegationExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>negationExpr</c>
	/// labeled alternative in <see cref="aracParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNegationExpr([NotNull] aracParser.NegationExprContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>shiftLeftExpr</c>
	/// labeled alternative in <see cref="aracParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterShiftLeftExpr([NotNull] aracParser.ShiftLeftExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>shiftLeftExpr</c>
	/// labeled alternative in <see cref="aracParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitShiftLeftExpr([NotNull] aracParser.ShiftLeftExprContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>BxorExpr</c>
	/// labeled alternative in <see cref="aracParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBxorExpr([NotNull] aracParser.BxorExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>BxorExpr</c>
	/// labeled alternative in <see cref="aracParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBxorExpr([NotNull] aracParser.BxorExprContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>CompExpr</c>
	/// labeled alternative in <see cref="aracParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCompExpr([NotNull] aracParser.CompExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>CompExpr</c>
	/// labeled alternative in <see cref="aracParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCompExpr([NotNull] aracParser.CompExprContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>multiplyExpr</c>
	/// labeled alternative in <see cref="aracParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMultiplyExpr([NotNull] aracParser.MultiplyExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>multiplyExpr</c>
	/// labeled alternative in <see cref="aracParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMultiplyExpr([NotNull] aracParser.MultiplyExprContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>shiftRightExpr</c>
	/// labeled alternative in <see cref="aracParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterShiftRightExpr([NotNull] aracParser.ShiftRightExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>shiftRightExpr</c>
	/// labeled alternative in <see cref="aracParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitShiftRightExpr([NotNull] aracParser.ShiftRightExprContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>BandExpr</c>
	/// labeled alternative in <see cref="aracParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBandExpr([NotNull] aracParser.BandExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>BandExpr</c>
	/// labeled alternative in <see cref="aracParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBandExpr([NotNull] aracParser.BandExprContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>LandExpr</c>
	/// labeled alternative in <see cref="aracParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLandExpr([NotNull] aracParser.LandExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>LandExpr</c>
	/// labeled alternative in <see cref="aracParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLandExpr([NotNull] aracParser.LandExprContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>IndirectionExpr</c>
	/// labeled alternative in <see cref="aracParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIndirectionExpr([NotNull] aracParser.IndirectionExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>IndirectionExpr</c>
	/// labeled alternative in <see cref="aracParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIndirectionExpr([NotNull] aracParser.IndirectionExprContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>subtractionExpr</c>
	/// labeled alternative in <see cref="aracParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSubtractionExpr([NotNull] aracParser.SubtractionExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>subtractionExpr</c>
	/// labeled alternative in <see cref="aracParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSubtractionExpr([NotNull] aracParser.SubtractionExprContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ArrSubScripExpr</c>
	/// labeled alternative in <see cref="aracParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArrSubScripExpr([NotNull] aracParser.ArrSubScripExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ArrSubScripExpr</c>
	/// labeled alternative in <see cref="aracParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArrSubScripExpr([NotNull] aracParser.ArrSubScripExprContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>LorExpr</c>
	/// labeled alternative in <see cref="aracParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLorExpr([NotNull] aracParser.LorExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>LorExpr</c>
	/// labeled alternative in <see cref="aracParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLorExpr([NotNull] aracParser.LorExprContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>variableExpr</c>
	/// labeled alternative in <see cref="aracParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVariableExpr([NotNull] aracParser.VariableExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>variableExpr</c>
	/// labeled alternative in <see cref="aracParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVariableExpr([NotNull] aracParser.VariableExprContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>funCallExpr</c>
	/// labeled alternative in <see cref="aracParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunCallExpr([NotNull] aracParser.FunCallExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>funCallExpr</c>
	/// labeled alternative in <see cref="aracParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunCallExpr([NotNull] aracParser.FunCallExprContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>EqualityExpr</c>
	/// labeled alternative in <see cref="aracParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEqualityExpr([NotNull] aracParser.EqualityExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>EqualityExpr</c>
	/// labeled alternative in <see cref="aracParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEqualityExpr([NotNull] aracParser.EqualityExprContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>addExpr</c>
	/// labeled alternative in <see cref="aracParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAddExpr([NotNull] aracParser.AddExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>addExpr</c>
	/// labeled alternative in <see cref="aracParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAddExpr([NotNull] aracParser.AddExprContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>BorExpr</c>
	/// labeled alternative in <see cref="aracParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBorExpr([NotNull] aracParser.BorExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>BorExpr</c>
	/// labeled alternative in <see cref="aracParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBorExpr([NotNull] aracParser.BorExprContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>literalExpr</c>
	/// labeled alternative in <see cref="aracParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLiteralExpr([NotNull] aracParser.LiteralExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>literalExpr</c>
	/// labeled alternative in <see cref="aracParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLiteralExpr([NotNull] aracParser.LiteralExprContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>SizeExpr</c>
	/// labeled alternative in <see cref="aracParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSizeExpr([NotNull] aracParser.SizeExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>SizeExpr</c>
	/// labeled alternative in <see cref="aracParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSizeExpr([NotNull] aracParser.SizeExprContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>UnaryBLExpr</c>
	/// labeled alternative in <see cref="aracParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUnaryBLExpr([NotNull] aracParser.UnaryBLExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>UnaryBLExpr</c>
	/// labeled alternative in <see cref="aracParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUnaryBLExpr([NotNull] aracParser.UnaryBLExprContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>CastingExpr</c>
	/// labeled alternative in <see cref="aracParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCastingExpr([NotNull] aracParser.CastingExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>CastingExpr</c>
	/// labeled alternative in <see cref="aracParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCastingExpr([NotNull] aracParser.CastingExprContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>parenthesisExpr</c>
	/// labeled alternative in <see cref="aracParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParenthesisExpr([NotNull] aracParser.ParenthesisExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>parenthesisExpr</c>
	/// labeled alternative in <see cref="aracParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParenthesisExpr([NotNull] aracParser.ParenthesisExprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="aracParser.comparison_op"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterComparison_op([NotNull] aracParser.Comparison_opContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="aracParser.comparison_op"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitComparison_op([NotNull] aracParser.Comparison_opContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="aracParser.unaryBL_op"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUnaryBL_op([NotNull] aracParser.UnaryBL_opContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="aracParser.unaryBL_op"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUnaryBL_op([NotNull] aracParser.UnaryBL_opContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="aracParser.equality_op"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEquality_op([NotNull] aracParser.Equality_opContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="aracParser.equality_op"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEquality_op([NotNull] aracParser.Equality_opContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>assignment_Stat</c>
	/// labeled alternative in <see cref="aracParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssignment_Stat([NotNull] aracParser.Assignment_StatContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>assignment_Stat</c>
	/// labeled alternative in <see cref="aracParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssignment_Stat([NotNull] aracParser.Assignment_StatContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>return_Stat</c>
	/// labeled alternative in <see cref="aracParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterReturn_Stat([NotNull] aracParser.Return_StatContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>return_Stat</c>
	/// labeled alternative in <see cref="aracParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitReturn_Stat([NotNull] aracParser.Return_StatContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>result_Stat</c>
	/// labeled alternative in <see cref="aracParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterResult_Stat([NotNull] aracParser.Result_StatContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>result_Stat</c>
	/// labeled alternative in <see cref="aracParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitResult_Stat([NotNull] aracParser.Result_StatContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>if_Stat</c>
	/// labeled alternative in <see cref="aracParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIf_Stat([NotNull] aracParser.If_StatContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>if_Stat</c>
	/// labeled alternative in <see cref="aracParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIf_Stat([NotNull] aracParser.If_StatContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>while_Stat</c>
	/// labeled alternative in <see cref="aracParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWhile_Stat([NotNull] aracParser.While_StatContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>while_Stat</c>
	/// labeled alternative in <see cref="aracParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWhile_Stat([NotNull] aracParser.While_StatContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>var_Decl</c>
	/// labeled alternative in <see cref="aracParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVar_Decl([NotNull] aracParser.Var_DeclContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>var_Decl</c>
	/// labeled alternative in <see cref="aracParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVar_Decl([NotNull] aracParser.Var_DeclContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>expression_Stat</c>
	/// labeled alternative in <see cref="aracParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpression_Stat([NotNull] aracParser.Expression_StatContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>expression_Stat</c>
	/// labeled alternative in <see cref="aracParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpression_Stat([NotNull] aracParser.Expression_StatContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>operation_Stat</c>
	/// labeled alternative in <see cref="aracParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOperation_Stat([NotNull] aracParser.Operation_StatContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>operation_Stat</c>
	/// labeled alternative in <see cref="aracParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOperation_Stat([NotNull] aracParser.Operation_StatContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="aracParser.statementList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStatementList([NotNull] aracParser.StatementListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="aracParser.statementList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStatementList([NotNull] aracParser.StatementListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="aracParser.expressionStat"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpressionStat([NotNull] aracParser.ExpressionStatContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="aracParser.expressionStat"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpressionStat([NotNull] aracParser.ExpressionStatContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="aracParser.operationStat"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOperationStat([NotNull] aracParser.OperationStatContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="aracParser.operationStat"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOperationStat([NotNull] aracParser.OperationStatContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="aracParser.assignmentStat"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssignmentStat([NotNull] aracParser.AssignmentStatContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="aracParser.assignmentStat"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssignmentStat([NotNull] aracParser.AssignmentStatContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="aracParser.ifStat"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIfStat([NotNull] aracParser.IfStatContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="aracParser.ifStat"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIfStat([NotNull] aracParser.IfStatContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="aracParser.whileStat"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWhileStat([NotNull] aracParser.WhileStatContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="aracParser.whileStat"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWhileStat([NotNull] aracParser.WhileStatContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="aracParser.returnStat"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterReturnStat([NotNull] aracParser.ReturnStatContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="aracParser.returnStat"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitReturnStat([NotNull] aracParser.ReturnStatContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="aracParser.resultStat"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterResultStat([NotNull] aracParser.ResultStatContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="aracParser.resultStat"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitResultStat([NotNull] aracParser.ResultStatContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="aracParser.varDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVarDecl([NotNull] aracParser.VarDeclContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="aracParser.varDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVarDecl([NotNull] aracParser.VarDeclContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="aracParser.dataType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDataType([NotNull] aracParser.DataTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="aracParser.dataType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDataType([NotNull] aracParser.DataTypeContext context);
}
} // namespace Parser
