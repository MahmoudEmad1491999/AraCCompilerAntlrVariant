//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.8
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from /home/mahmoud/projects/AraCCompilerAntlrVariant/AntlrExamples/arac.g4 by ANTLR 4.8

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace AntlrExamples.Parser {
using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="aracParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.8")]
[System.CLSCompliant(false)]
public interface IaracListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="aracParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterProgram([NotNull] aracParser.ProgramContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="aracParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitProgram([NotNull] aracParser.ProgramContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="aracParser.globalVarDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGlobalVarDecl([NotNull] aracParser.GlobalVarDeclContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="aracParser.globalVarDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGlobalVarDecl([NotNull] aracParser.GlobalVarDeclContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="aracParser.inititalization"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInititalization([NotNull] aracParser.InititalizationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="aracParser.inititalization"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInititalization([NotNull] aracParser.InititalizationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="aracParser.functionDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunctionDecl([NotNull] aracParser.FunctionDeclContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="aracParser.functionDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunctionDecl([NotNull] aracParser.FunctionDeclContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="aracParser.operationDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOperationDecl([NotNull] aracParser.OperationDeclContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="aracParser.operationDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOperationDecl([NotNull] aracParser.OperationDeclContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="aracParser.parameter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParameter([NotNull] aracParser.ParameterContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="aracParser.parameter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParameter([NotNull] aracParser.ParameterContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="aracParser.paramList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParamList([NotNull] aracParser.ParamListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="aracParser.paramList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParamList([NotNull] aracParser.ParamListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="aracParser.argument"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArgument([NotNull] aracParser.ArgumentContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="aracParser.argument"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArgument([NotNull] aracParser.ArgumentContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="aracParser.argumentList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArgumentList([NotNull] aracParser.ArgumentListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="aracParser.argumentList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArgumentList([NotNull] aracParser.ArgumentListContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>lor_expr</c>
	/// labeled alternative in <see cref="aracParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLor_expr([NotNull] aracParser.Lor_exprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>lor_expr</c>
	/// labeled alternative in <see cref="aracParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLor_expr([NotNull] aracParser.Lor_exprContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>add_expr</c>
	/// labeled alternative in <see cref="aracParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAdd_expr([NotNull] aracParser.Add_exprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>add_expr</c>
	/// labeled alternative in <see cref="aracParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAdd_expr([NotNull] aracParser.Add_exprContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>land_expr</c>
	/// labeled alternative in <see cref="aracParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLand_expr([NotNull] aracParser.Land_exprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>land_expr</c>
	/// labeled alternative in <see cref="aracParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLand_expr([NotNull] aracParser.Land_exprContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>comparison_expr</c>
	/// labeled alternative in <see cref="aracParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterComparison_expr([NotNull] aracParser.Comparison_exprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>comparison_expr</c>
	/// labeled alternative in <see cref="aracParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitComparison_expr([NotNull] aracParser.Comparison_exprContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>multiply_expr</c>
	/// labeled alternative in <see cref="aracParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMultiply_expr([NotNull] aracParser.Multiply_exprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>multiply_expr</c>
	/// labeled alternative in <see cref="aracParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMultiply_expr([NotNull] aracParser.Multiply_exprContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>variable_expr</c>
	/// labeled alternative in <see cref="aracParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVariable_expr([NotNull] aracParser.Variable_exprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>variable_expr</c>
	/// labeled alternative in <see cref="aracParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVariable_expr([NotNull] aracParser.Variable_exprContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>parenthesis_expr</c>
	/// labeled alternative in <see cref="aracParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParenthesis_expr([NotNull] aracParser.Parenthesis_exprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>parenthesis_expr</c>
	/// labeled alternative in <see cref="aracParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParenthesis_expr([NotNull] aracParser.Parenthesis_exprContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>int_literal_expr</c>
	/// labeled alternative in <see cref="aracParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInt_literal_expr([NotNull] aracParser.Int_literal_exprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>int_literal_expr</c>
	/// labeled alternative in <see cref="aracParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInt_literal_expr([NotNull] aracParser.Int_literal_exprContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>subtraction_expr</c>
	/// labeled alternative in <see cref="aracParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSubtraction_expr([NotNull] aracParser.Subtraction_exprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>subtraction_expr</c>
	/// labeled alternative in <see cref="aracParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSubtraction_expr([NotNull] aracParser.Subtraction_exprContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>divide_expr</c>
	/// labeled alternative in <see cref="aracParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDivide_expr([NotNull] aracParser.Divide_exprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>divide_expr</c>
	/// labeled alternative in <see cref="aracParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDivide_expr([NotNull] aracParser.Divide_exprContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>fun_call_expr</c>
	/// labeled alternative in <see cref="aracParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFun_call_expr([NotNull] aracParser.Fun_call_exprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>fun_call_expr</c>
	/// labeled alternative in <see cref="aracParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFun_call_expr([NotNull] aracParser.Fun_call_exprContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>minus_expr</c>
	/// labeled alternative in <see cref="aracParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMinus_expr([NotNull] aracParser.Minus_exprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>minus_expr</c>
	/// labeled alternative in <see cref="aracParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMinus_expr([NotNull] aracParser.Minus_exprContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>lnot_expr</c>
	/// labeled alternative in <see cref="aracParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLnot_expr([NotNull] aracParser.Lnot_exprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>lnot_expr</c>
	/// labeled alternative in <see cref="aracParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLnot_expr([NotNull] aracParser.Lnot_exprContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>equality_expr</c>
	/// labeled alternative in <see cref="aracParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEquality_expr([NotNull] aracParser.Equality_exprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>equality_expr</c>
	/// labeled alternative in <see cref="aracParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEquality_expr([NotNull] aracParser.Equality_exprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="aracParser.int_literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInt_literal([NotNull] aracParser.Int_literalContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="aracParser.int_literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInt_literal([NotNull] aracParser.Int_literalContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="aracParser.comparison_op"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterComparison_op([NotNull] aracParser.Comparison_opContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="aracParser.comparison_op"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitComparison_op([NotNull] aracParser.Comparison_opContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="aracParser.equality_op"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEquality_op([NotNull] aracParser.Equality_opContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="aracParser.equality_op"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEquality_op([NotNull] aracParser.Equality_opContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>assignment_Stat</c>
	/// labeled alternative in <see cref="aracParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssignment_Stat([NotNull] aracParser.Assignment_StatContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>assignment_Stat</c>
	/// labeled alternative in <see cref="aracParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssignment_Stat([NotNull] aracParser.Assignment_StatContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>return_Stat</c>
	/// labeled alternative in <see cref="aracParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterReturn_Stat([NotNull] aracParser.Return_StatContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>return_Stat</c>
	/// labeled alternative in <see cref="aracParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitReturn_Stat([NotNull] aracParser.Return_StatContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>result_Stat</c>
	/// labeled alternative in <see cref="aracParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterResult_Stat([NotNull] aracParser.Result_StatContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>result_Stat</c>
	/// labeled alternative in <see cref="aracParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitResult_Stat([NotNull] aracParser.Result_StatContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>if_Stat</c>
	/// labeled alternative in <see cref="aracParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIf_Stat([NotNull] aracParser.If_StatContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>if_Stat</c>
	/// labeled alternative in <see cref="aracParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIf_Stat([NotNull] aracParser.If_StatContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>while_Stat</c>
	/// labeled alternative in <see cref="aracParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWhile_Stat([NotNull] aracParser.While_StatContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>while_Stat</c>
	/// labeled alternative in <see cref="aracParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWhile_Stat([NotNull] aracParser.While_StatContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>var_Decl</c>
	/// labeled alternative in <see cref="aracParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVar_Decl([NotNull] aracParser.Var_DeclContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>var_Decl</c>
	/// labeled alternative in <see cref="aracParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVar_Decl([NotNull] aracParser.Var_DeclContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>operation_Stat</c>
	/// labeled alternative in <see cref="aracParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOperation_Stat([NotNull] aracParser.Operation_StatContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>operation_Stat</c>
	/// labeled alternative in <see cref="aracParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOperation_Stat([NotNull] aracParser.Operation_StatContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="aracParser.statementList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStatementList([NotNull] aracParser.StatementListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="aracParser.statementList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStatementList([NotNull] aracParser.StatementListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="aracParser.operationStat"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOperationStat([NotNull] aracParser.OperationStatContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="aracParser.operationStat"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOperationStat([NotNull] aracParser.OperationStatContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="aracParser.assignmentStat"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssignmentStat([NotNull] aracParser.AssignmentStatContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="aracParser.assignmentStat"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssignmentStat([NotNull] aracParser.AssignmentStatContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="aracParser.ifStat"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIfStat([NotNull] aracParser.IfStatContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="aracParser.ifStat"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIfStat([NotNull] aracParser.IfStatContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="aracParser.whileStat"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWhileStat([NotNull] aracParser.WhileStatContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="aracParser.whileStat"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWhileStat([NotNull] aracParser.WhileStatContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="aracParser.returnStat"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterReturnStat([NotNull] aracParser.ReturnStatContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="aracParser.returnStat"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitReturnStat([NotNull] aracParser.ReturnStatContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="aracParser.resultStat"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterResultStat([NotNull] aracParser.ResultStatContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="aracParser.resultStat"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitResultStat([NotNull] aracParser.ResultStatContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="aracParser.varDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVarDecl([NotNull] aracParser.VarDeclContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="aracParser.varDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVarDecl([NotNull] aracParser.VarDeclContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="aracParser.dataType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDataType([NotNull] aracParser.DataTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="aracParser.dataType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDataType([NotNull] aracParser.DataTypeContext context);
}
} // namespace AntlrExamples.Parser
