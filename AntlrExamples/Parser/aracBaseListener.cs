//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.8
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from /home/mahmoud/projects/AraCCompilerAntlrVariant/AntlrExamples/arac.g4 by ANTLR 4.8

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace AntlrExamples.Parser {

using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="IaracListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.8")]
[System.CLSCompliant(false)]
public partial class aracBaseListener : IaracListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="aracParser.program"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterProgram([NotNull] aracParser.ProgramContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="aracParser.program"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitProgram([NotNull] aracParser.ProgramContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="aracParser.globalVarDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterGlobalVarDecl([NotNull] aracParser.GlobalVarDeclContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="aracParser.globalVarDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitGlobalVarDecl([NotNull] aracParser.GlobalVarDeclContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="aracParser.inititalization"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInititalization([NotNull] aracParser.InititalizationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="aracParser.inititalization"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInititalization([NotNull] aracParser.InititalizationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="aracParser.functionDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunctionDecl([NotNull] aracParser.FunctionDeclContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="aracParser.functionDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunctionDecl([NotNull] aracParser.FunctionDeclContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="aracParser.operationDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOperationDecl([NotNull] aracParser.OperationDeclContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="aracParser.operationDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOperationDecl([NotNull] aracParser.OperationDeclContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="aracParser.parameter"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParameter([NotNull] aracParser.ParameterContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="aracParser.parameter"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParameter([NotNull] aracParser.ParameterContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="aracParser.paramList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParamList([NotNull] aracParser.ParamListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="aracParser.paramList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParamList([NotNull] aracParser.ParamListContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="aracParser.argument"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArgument([NotNull] aracParser.ArgumentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="aracParser.argument"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArgument([NotNull] aracParser.ArgumentContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="aracParser.argumentList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArgumentList([NotNull] aracParser.ArgumentListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="aracParser.argumentList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArgumentList([NotNull] aracParser.ArgumentListContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>lor_expr</c>
	/// labeled alternative in <see cref="aracParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLor_expr([NotNull] aracParser.Lor_exprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>lor_expr</c>
	/// labeled alternative in <see cref="aracParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLor_expr([NotNull] aracParser.Lor_exprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>add_expr</c>
	/// labeled alternative in <see cref="aracParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAdd_expr([NotNull] aracParser.Add_exprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>add_expr</c>
	/// labeled alternative in <see cref="aracParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAdd_expr([NotNull] aracParser.Add_exprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>land_expr</c>
	/// labeled alternative in <see cref="aracParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLand_expr([NotNull] aracParser.Land_exprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>land_expr</c>
	/// labeled alternative in <see cref="aracParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLand_expr([NotNull] aracParser.Land_exprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>comparison_expr</c>
	/// labeled alternative in <see cref="aracParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterComparison_expr([NotNull] aracParser.Comparison_exprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>comparison_expr</c>
	/// labeled alternative in <see cref="aracParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitComparison_expr([NotNull] aracParser.Comparison_exprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>multiply_expr</c>
	/// labeled alternative in <see cref="aracParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMultiply_expr([NotNull] aracParser.Multiply_exprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>multiply_expr</c>
	/// labeled alternative in <see cref="aracParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMultiply_expr([NotNull] aracParser.Multiply_exprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>variable_expr</c>
	/// labeled alternative in <see cref="aracParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVariable_expr([NotNull] aracParser.Variable_exprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>variable_expr</c>
	/// labeled alternative in <see cref="aracParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVariable_expr([NotNull] aracParser.Variable_exprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>parenthesis_expr</c>
	/// labeled alternative in <see cref="aracParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParenthesis_expr([NotNull] aracParser.Parenthesis_exprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>parenthesis_expr</c>
	/// labeled alternative in <see cref="aracParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParenthesis_expr([NotNull] aracParser.Parenthesis_exprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>int_literal_expr</c>
	/// labeled alternative in <see cref="aracParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInt_literal_expr([NotNull] aracParser.Int_literal_exprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>int_literal_expr</c>
	/// labeled alternative in <see cref="aracParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInt_literal_expr([NotNull] aracParser.Int_literal_exprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>subtraction_expr</c>
	/// labeled alternative in <see cref="aracParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSubtraction_expr([NotNull] aracParser.Subtraction_exprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>subtraction_expr</c>
	/// labeled alternative in <see cref="aracParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSubtraction_expr([NotNull] aracParser.Subtraction_exprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>divide_expr</c>
	/// labeled alternative in <see cref="aracParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDivide_expr([NotNull] aracParser.Divide_exprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>divide_expr</c>
	/// labeled alternative in <see cref="aracParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDivide_expr([NotNull] aracParser.Divide_exprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>fun_call_expr</c>
	/// labeled alternative in <see cref="aracParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFun_call_expr([NotNull] aracParser.Fun_call_exprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>fun_call_expr</c>
	/// labeled alternative in <see cref="aracParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFun_call_expr([NotNull] aracParser.Fun_call_exprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>minus_expr</c>
	/// labeled alternative in <see cref="aracParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMinus_expr([NotNull] aracParser.Minus_exprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>minus_expr</c>
	/// labeled alternative in <see cref="aracParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMinus_expr([NotNull] aracParser.Minus_exprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>lnot_expr</c>
	/// labeled alternative in <see cref="aracParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLnot_expr([NotNull] aracParser.Lnot_exprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>lnot_expr</c>
	/// labeled alternative in <see cref="aracParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLnot_expr([NotNull] aracParser.Lnot_exprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>equality_expr</c>
	/// labeled alternative in <see cref="aracParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEquality_expr([NotNull] aracParser.Equality_exprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>equality_expr</c>
	/// labeled alternative in <see cref="aracParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEquality_expr([NotNull] aracParser.Equality_exprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="aracParser.int_literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInt_literal([NotNull] aracParser.Int_literalContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="aracParser.int_literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInt_literal([NotNull] aracParser.Int_literalContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="aracParser.comparison_op"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterComparison_op([NotNull] aracParser.Comparison_opContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="aracParser.comparison_op"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitComparison_op([NotNull] aracParser.Comparison_opContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="aracParser.equality_op"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEquality_op([NotNull] aracParser.Equality_opContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="aracParser.equality_op"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEquality_op([NotNull] aracParser.Equality_opContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>assignment_Stat</c>
	/// labeled alternative in <see cref="aracParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAssignment_Stat([NotNull] aracParser.Assignment_StatContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>assignment_Stat</c>
	/// labeled alternative in <see cref="aracParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAssignment_Stat([NotNull] aracParser.Assignment_StatContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>return_Stat</c>
	/// labeled alternative in <see cref="aracParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterReturn_Stat([NotNull] aracParser.Return_StatContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>return_Stat</c>
	/// labeled alternative in <see cref="aracParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitReturn_Stat([NotNull] aracParser.Return_StatContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>result_Stat</c>
	/// labeled alternative in <see cref="aracParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterResult_Stat([NotNull] aracParser.Result_StatContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>result_Stat</c>
	/// labeled alternative in <see cref="aracParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitResult_Stat([NotNull] aracParser.Result_StatContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>if_Stat</c>
	/// labeled alternative in <see cref="aracParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIf_Stat([NotNull] aracParser.If_StatContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>if_Stat</c>
	/// labeled alternative in <see cref="aracParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIf_Stat([NotNull] aracParser.If_StatContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>while_Stat</c>
	/// labeled alternative in <see cref="aracParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterWhile_Stat([NotNull] aracParser.While_StatContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>while_Stat</c>
	/// labeled alternative in <see cref="aracParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitWhile_Stat([NotNull] aracParser.While_StatContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>var_Decl</c>
	/// labeled alternative in <see cref="aracParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVar_Decl([NotNull] aracParser.Var_DeclContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>var_Decl</c>
	/// labeled alternative in <see cref="aracParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVar_Decl([NotNull] aracParser.Var_DeclContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>operation_Stat</c>
	/// labeled alternative in <see cref="aracParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOperation_Stat([NotNull] aracParser.Operation_StatContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>operation_Stat</c>
	/// labeled alternative in <see cref="aracParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOperation_Stat([NotNull] aracParser.Operation_StatContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="aracParser.statementList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStatementList([NotNull] aracParser.StatementListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="aracParser.statementList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStatementList([NotNull] aracParser.StatementListContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="aracParser.operationStat"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOperationStat([NotNull] aracParser.OperationStatContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="aracParser.operationStat"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOperationStat([NotNull] aracParser.OperationStatContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="aracParser.assignmentStat"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAssignmentStat([NotNull] aracParser.AssignmentStatContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="aracParser.assignmentStat"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAssignmentStat([NotNull] aracParser.AssignmentStatContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="aracParser.ifStat"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIfStat([NotNull] aracParser.IfStatContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="aracParser.ifStat"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIfStat([NotNull] aracParser.IfStatContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="aracParser.whileStat"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterWhileStat([NotNull] aracParser.WhileStatContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="aracParser.whileStat"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitWhileStat([NotNull] aracParser.WhileStatContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="aracParser.returnStat"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterReturnStat([NotNull] aracParser.ReturnStatContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="aracParser.returnStat"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitReturnStat([NotNull] aracParser.ReturnStatContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="aracParser.resultStat"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterResultStat([NotNull] aracParser.ResultStatContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="aracParser.resultStat"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitResultStat([NotNull] aracParser.ResultStatContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="aracParser.varDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVarDecl([NotNull] aracParser.VarDeclContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="aracParser.varDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVarDecl([NotNull] aracParser.VarDeclContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="aracParser.dataType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDataType([NotNull] aracParser.DataTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="aracParser.dataType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDataType([NotNull] aracParser.DataTypeContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
} // namespace AntlrExamples.Parser
