//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.8
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from /home/mahmoud/repos/AraCCompilerAntlrVariant/AntlrExamples/AraC.g4 by ANTLR 4.8

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace AntlrOutput {
using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="AraCParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.8")]
[System.CLSCompliant(false)]
public interface IAraCVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by <see cref="AraCParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitProgram([NotNull] AraCParser.ProgramContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="AraCParser.global_var_declaratoin"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitGlobal_var_declaratoin([NotNull] AraCParser.Global_var_declaratoinContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="AraCParser.function_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunction_declaration([NotNull] AraCParser.Function_declarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="AraCParser.param_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParam_list([NotNull] AraCParser.Param_listContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="AraCParser.operatoin_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOperatoin_declaration([NotNull] AraCParser.Operatoin_declarationContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>parenthesis_expression</c>
	/// labeled alternative in <see cref="AraCParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParenthesis_expression([NotNull] AraCParser.Parenthesis_expressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>array_subscription_expression</c>
	/// labeled alternative in <see cref="AraCParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArray_subscription_expression([NotNull] AraCParser.Array_subscription_expressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>value_inside_address_expression</c>
	/// labeled alternative in <see cref="AraCParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitValue_inside_address_expression([NotNull] AraCParser.Value_inside_address_expressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>casting_expression</c>
	/// labeled alternative in <see cref="AraCParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCasting_expression([NotNull] AraCParser.Casting_expressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>bitwise_and_expression</c>
	/// labeled alternative in <see cref="AraCParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBitwise_and_expression([NotNull] AraCParser.Bitwise_and_expressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>equality_testing_expression</c>
	/// labeled alternative in <see cref="AraCParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitEquality_testing_expression([NotNull] AraCParser.Equality_testing_expressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>size_of_expression</c>
	/// labeled alternative in <see cref="AraCParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSize_of_expression([NotNull] AraCParser.Size_of_expressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>bitwise_or_expression</c>
	/// labeled alternative in <see cref="AraCParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBitwise_or_expression([NotNull] AraCParser.Bitwise_or_expressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>logical_and_expressoin</c>
	/// labeled alternative in <see cref="AraCParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLogical_and_expressoin([NotNull] AraCParser.Logical_and_expressoinContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>logical_or_expression</c>
	/// labeled alternative in <see cref="AraCParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLogical_or_expression([NotNull] AraCParser.Logical_or_expressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>unary_plus_or_minus_expression</c>
	/// labeled alternative in <see cref="AraCParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUnary_plus_or_minus_expression([NotNull] AraCParser.Unary_plus_or_minus_expressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>dot_arrow_expression</c>
	/// labeled alternative in <see cref="AraCParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDot_arrow_expression([NotNull] AraCParser.Dot_arrow_expressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>comparative_expression</c>
	/// labeled alternative in <see cref="AraCParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitComparative_expression([NotNull] AraCParser.Comparative_expressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>bitwise_shift_expression</c>
	/// labeled alternative in <see cref="AraCParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBitwise_shift_expression([NotNull] AraCParser.Bitwise_shift_expressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>address_of_expression</c>
	/// labeled alternative in <see cref="AraCParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAddress_of_expression([NotNull] AraCParser.Address_of_expressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>additive_expression</c>
	/// labeled alternative in <see cref="AraCParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAdditive_expression([NotNull] AraCParser.Additive_expressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>funciton_calling_expression</c>
	/// labeled alternative in <see cref="AraCParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunciton_calling_expression([NotNull] AraCParser.Funciton_calling_expressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>bitwise_xor_expression</c>
	/// labeled alternative in <see cref="AraCParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBitwise_xor_expression([NotNull] AraCParser.Bitwise_xor_expressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>literal_expression</c>
	/// labeled alternative in <see cref="AraCParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLiteral_expression([NotNull] AraCParser.Literal_expressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>identifier_expression</c>
	/// labeled alternative in <see cref="AraCParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIdentifier_expression([NotNull] AraCParser.Identifier_expressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>multiplicative_expression</c>
	/// labeled alternative in <see cref="AraCParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMultiplicative_expression([NotNull] AraCParser.Multiplicative_expressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>unary_negation_logical_and_bitwise</c>
	/// labeled alternative in <see cref="AraCParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUnary_negation_logical_and_bitwise([NotNull] AraCParser.Unary_negation_logical_and_bitwiseContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="AraCParser.argument_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArgument_list([NotNull] AraCParser.Argument_listContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>assignment_statement_typeof_statement</c>
	/// labeled alternative in <see cref="AraCParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAssignment_statement_typeof_statement([NotNull] AraCParser.Assignment_statement_typeof_statementContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>return_statement_typeof_statement</c>
	/// labeled alternative in <see cref="AraCParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitReturn_statement_typeof_statement([NotNull] AraCParser.Return_statement_typeof_statementContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>result_statement_typeof_statement</c>
	/// labeled alternative in <see cref="AraCParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitResult_statement_typeof_statement([NotNull] AraCParser.Result_statement_typeof_statementContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>if_statement_typeof_statement</c>
	/// labeled alternative in <see cref="AraCParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIf_statement_typeof_statement([NotNull] AraCParser.If_statement_typeof_statementContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>while_statement_typeof_statement</c>
	/// labeled alternative in <see cref="AraCParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitWhile_statement_typeof_statement([NotNull] AraCParser.While_statement_typeof_statementContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>var_declaration_typeof_statement</c>
	/// labeled alternative in <see cref="AraCParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVar_declaration_typeof_statement([NotNull] AraCParser.Var_declaration_typeof_statementContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>expression_statement_typeof_statement</c>
	/// labeled alternative in <see cref="AraCParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpression_statement_typeof_statement([NotNull] AraCParser.Expression_statement_typeof_statementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="AraCParser.assignment_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAssignment_statement([NotNull] AraCParser.Assignment_statementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="AraCParser.left_hand_side"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLeft_hand_side([NotNull] AraCParser.Left_hand_sideContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="AraCParser.if_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIf_statement([NotNull] AraCParser.If_statementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="AraCParser.while_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitWhile_statement([NotNull] AraCParser.While_statementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="AraCParser.return_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitReturn_statement([NotNull] AraCParser.Return_statementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="AraCParser.result_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitResult_statement([NotNull] AraCParser.Result_statementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="AraCParser.var_declaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVar_declaration([NotNull] AraCParser.Var_declarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="AraCParser.colon"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitColon([NotNull] AraCParser.ColonContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="AraCParser.data_type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitData_type([NotNull] AraCParser.Data_typeContext context);
}
} // namespace AntlrOutput
