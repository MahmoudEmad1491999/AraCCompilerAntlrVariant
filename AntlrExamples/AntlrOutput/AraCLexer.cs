//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.8
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from /home/mahmoud/AraCAntlrVariant/AntlrExamples/AraC.g4 by ANTLR 4.8

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace AntlrOutput {
using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.8")]
[System.CLSCompliant(false)]
public partial class AraCLexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		T__0=1, IDENTIFIER=2, ARABIC_INT_LITERAL=3, ENGLISH_INT_LITERAL=4, LEFT_BOW=5, 
		RIGHT_BOW=6, LEFT_SQUARE=7, RIGHT_SQUARE=8, LEFT_CURLY=9, RIGHT_CURLY=10, 
		PLUS=11, MINUS=12, MULTIPLY=13, DIVIDE=14, ARABIC_MODULS=15, SHIFT_LEFT=16, 
		SHIFT_RIGHT_ARITHMETIC=17, SHIFT_RIGHT=18, LESS_THAN_EQUAL=19, GREATER_THAN_EQUAL=20, 
		LEFT_ANGLE=21, RIGHT_ANGLE=22, EQUAL=23, NOT_EQUAL=24, ASSIGN=25, DOT=26, 
		FASLA=27, FASLA_MANQUOTA=28, FUNCTION=29, OPERATION=30, RETURN_KEYWORD=31, 
		RESULT_KEYWORD=32, IF_KEYWORD=33, WHILE_KEYWORD=34, INT_DATA_TYPE=35, 
		UINT_DATA_TYPE=36, BYTE_KEYWORD=37, UBYTE_KEYWORD=38, SHORT_KEYWORD=39, 
		USHORT_KEYWORD=40, LONG_KEYWORD=41, ULONG_KEYWORD=42;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"T__0", "IDENTIFIER", "ARABIC_INT_LITERAL", "ENGLISH_INT_LITERAL", "LEFT_BOW", 
		"RIGHT_BOW", "LEFT_SQUARE", "RIGHT_SQUARE", "LEFT_CURLY", "RIGHT_CURLY", 
		"PLUS", "MINUS", "MULTIPLY", "DIVIDE", "ARABIC_MODULS", "SHIFT_LEFT", 
		"SHIFT_RIGHT_ARITHMETIC", "SHIFT_RIGHT", "LESS_THAN_EQUAL", "GREATER_THAN_EQUAL", 
		"LEFT_ANGLE", "RIGHT_ANGLE", "EQUAL", "NOT_EQUAL", "ASSIGN", "DOT", "FASLA", 
		"FASLA_MANQUOTA", "FUNCTION", "OPERATION", "RETURN_KEYWORD", "RESULT_KEYWORD", 
		"IF_KEYWORD", "WHILE_KEYWORD", "INT_DATA_TYPE", "UINT_DATA_TYPE", "BYTE_KEYWORD", 
		"UBYTE_KEYWORD", "SHORT_KEYWORD", "USHORT_KEYWORD", "LONG_KEYWORD", "ULONG_KEYWORD"
	};


	public AraCLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public AraCLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, "'Hello'", null, null, null, "'('", "')'", "'['", "']'", "'{'", 
		"'}'", "'+'", "'-'", "'\u00D7'", "'\u00F7'", "'\u066A'", "'<<'", "'>>>'", 
		"'>>'", "'<='", "'>='", "'<'", "'>'", "'=='", "'!='", "'='", "'.'", "'\u060C'", 
		"'\u061B'", "'\u062F\u0627\u0644\u0629'", "'\u0639\u0645\u0644\u064A\u0629'", 
		"'\u0631\u062C\u0648\u0639'", "'\u0627\u0644\u0646\u0627\u062A\u062C'", 
		"'IF'", "'WHILE'", "'\u0635\u062D\u064A\u062D'", "'\u0637\u0628\u064A\u0639\u064A'", 
		"'\u0635\u062D\u064A\u062D_\u0661'", "'\u0637\u0628\u064A\u0639\u064A_\u0661'", 
		"'\u0635\u062D\u064A\u062D_\u0662'", "'\u0637\u0628\u064A\u0639\u064A_\u0662'", 
		"'\u0635\u062D\u064A\u062D_\u0668'", "'\u0637\u0628\u064A\u0639\u064A_\u0668'"
	};
	private static readonly string[] _SymbolicNames = {
		null, null, "IDENTIFIER", "ARABIC_INT_LITERAL", "ENGLISH_INT_LITERAL", 
		"LEFT_BOW", "RIGHT_BOW", "LEFT_SQUARE", "RIGHT_SQUARE", "LEFT_CURLY", 
		"RIGHT_CURLY", "PLUS", "MINUS", "MULTIPLY", "DIVIDE", "ARABIC_MODULS", 
		"SHIFT_LEFT", "SHIFT_RIGHT_ARITHMETIC", "SHIFT_RIGHT", "LESS_THAN_EQUAL", 
		"GREATER_THAN_EQUAL", "LEFT_ANGLE", "RIGHT_ANGLE", "EQUAL", "NOT_EQUAL", 
		"ASSIGN", "DOT", "FASLA", "FASLA_MANQUOTA", "FUNCTION", "OPERATION", "RETURN_KEYWORD", 
		"RESULT_KEYWORD", "IF_KEYWORD", "WHILE_KEYWORD", "INT_DATA_TYPE", "UINT_DATA_TYPE", 
		"BYTE_KEYWORD", "UBYTE_KEYWORD", "SHORT_KEYWORD", "USHORT_KEYWORD", "LONG_KEYWORD", 
		"ULONG_KEYWORD"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "AraC.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return new string(_serializedATN); } }

	static AraCLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static char[] _serializedATN = {
		'\x3', '\x608B', '\xA72A', '\x8133', '\xB9ED', '\x417C', '\x3BE7', '\x7786', 
		'\x5964', '\x2', ',', '\x102', '\b', '\x1', '\x4', '\x2', '\t', '\x2', 
		'\x4', '\x3', '\t', '\x3', '\x4', '\x4', '\t', '\x4', '\x4', '\x5', '\t', 
		'\x5', '\x4', '\x6', '\t', '\x6', '\x4', '\a', '\t', '\a', '\x4', '\b', 
		'\t', '\b', '\x4', '\t', '\t', '\t', '\x4', '\n', '\t', '\n', '\x4', '\v', 
		'\t', '\v', '\x4', '\f', '\t', '\f', '\x4', '\r', '\t', '\r', '\x4', '\xE', 
		'\t', '\xE', '\x4', '\xF', '\t', '\xF', '\x4', '\x10', '\t', '\x10', '\x4', 
		'\x11', '\t', '\x11', '\x4', '\x12', '\t', '\x12', '\x4', '\x13', '\t', 
		'\x13', '\x4', '\x14', '\t', '\x14', '\x4', '\x15', '\t', '\x15', '\x4', 
		'\x16', '\t', '\x16', '\x4', '\x17', '\t', '\x17', '\x4', '\x18', '\t', 
		'\x18', '\x4', '\x19', '\t', '\x19', '\x4', '\x1A', '\t', '\x1A', '\x4', 
		'\x1B', '\t', '\x1B', '\x4', '\x1C', '\t', '\x1C', '\x4', '\x1D', '\t', 
		'\x1D', '\x4', '\x1E', '\t', '\x1E', '\x4', '\x1F', '\t', '\x1F', '\x4', 
		' ', '\t', ' ', '\x4', '!', '\t', '!', '\x4', '\"', '\t', '\"', '\x4', 
		'#', '\t', '#', '\x4', '$', '\t', '$', '\x4', '%', '\t', '%', '\x4', '&', 
		'\t', '&', '\x4', '\'', '\t', '\'', '\x4', '(', '\t', '(', '\x4', ')', 
		'\t', ')', '\x4', '*', '\t', '*', '\x4', '+', '\t', '+', '\x3', '\x2', 
		'\x3', '\x2', '\x3', '\x2', '\x3', '\x2', '\x3', '\x2', '\x3', '\x2', 
		'\x3', '\x3', '\x3', '\x3', '\a', '\x3', '`', '\n', '\x3', '\f', '\x3', 
		'\xE', '\x3', '\x63', '\v', '\x3', '\x3', '\x4', '\x3', '\x4', '\a', '\x4', 
		'g', '\n', '\x4', '\f', '\x4', '\xE', '\x4', 'j', '\v', '\x4', '\x3', 
		'\x5', '\x3', '\x5', '\a', '\x5', 'n', '\n', '\x5', '\f', '\x5', '\xE', 
		'\x5', 'q', '\v', '\x5', '\x3', '\x6', '\x3', '\x6', '\x3', '\a', '\x3', 
		'\a', '\x3', '\b', '\x3', '\b', '\x3', '\t', '\x3', '\t', '\x3', '\n', 
		'\x3', '\n', '\x3', '\v', '\x3', '\v', '\x3', '\f', '\x3', '\f', '\x3', 
		'\r', '\x3', '\r', '\x3', '\xE', '\x3', '\xE', '\x3', '\xF', '\x3', '\xF', 
		'\x3', '\x10', '\x3', '\x10', '\x3', '\x11', '\x3', '\x11', '\x3', '\x11', 
		'\x3', '\x12', '\x3', '\x12', '\x3', '\x12', '\x3', '\x12', '\x3', '\x13', 
		'\x3', '\x13', '\x3', '\x13', '\x3', '\x14', '\x3', '\x14', '\x3', '\x14', 
		'\x3', '\x15', '\x3', '\x15', '\x3', '\x15', '\x3', '\x16', '\x3', '\x16', 
		'\x3', '\x17', '\x3', '\x17', '\x3', '\x18', '\x3', '\x18', '\x3', '\x18', 
		'\x3', '\x19', '\x3', '\x19', '\x3', '\x19', '\x3', '\x1A', '\x3', '\x1A', 
		'\x3', '\x1B', '\x3', '\x1B', '\x3', '\x1C', '\x3', '\x1C', '\x3', '\x1D', 
		'\x3', '\x1D', '\x3', '\x1E', '\x3', '\x1E', '\x3', '\x1E', '\x3', '\x1E', 
		'\x3', '\x1E', '\x3', '\x1F', '\x3', '\x1F', '\x3', '\x1F', '\x3', '\x1F', 
		'\x3', '\x1F', '\x3', '\x1F', '\x3', ' ', '\x3', ' ', '\x3', ' ', '\x3', 
		' ', '\x3', ' ', '\x3', '!', '\x3', '!', '\x3', '!', '\x3', '!', '\x3', 
		'!', '\x3', '!', '\x3', '!', '\x3', '\"', '\x3', '\"', '\x3', '\"', '\x3', 
		'#', '\x3', '#', '\x3', '#', '\x3', '#', '\x3', '#', '\x3', '#', '\x3', 
		'$', '\x3', '$', '\x3', '$', '\x3', '$', '\x3', '$', '\x3', '%', '\x3', 
		'%', '\x3', '%', '\x3', '%', '\x3', '%', '\x3', '%', '\x3', '&', '\x3', 
		'&', '\x3', '&', '\x3', '&', '\x3', '&', '\x3', '&', '\x3', '&', '\x3', 
		'\'', '\x3', '\'', '\x3', '\'', '\x3', '\'', '\x3', '\'', '\x3', '\'', 
		'\x3', '\'', '\x3', '\'', '\x3', '(', '\x3', '(', '\x3', '(', '\x3', '(', 
		'\x3', '(', '\x3', '(', '\x3', '(', '\x3', ')', '\x3', ')', '\x3', ')', 
		'\x3', ')', '\x3', ')', '\x3', ')', '\x3', ')', '\x3', ')', '\x3', '*', 
		'\x3', '*', '\x3', '*', '\x3', '*', '\x3', '*', '\x3', '*', '\x3', '*', 
		'\x3', '+', '\x3', '+', '\x3', '+', '\x3', '+', '\x3', '+', '\x3', '+', 
		'\x3', '+', '\x3', '+', '\x2', '\x2', ',', '\x3', '\x3', '\x5', '\x4', 
		'\a', '\x5', '\t', '\x6', '\v', '\a', '\r', '\b', '\xF', '\t', '\x11', 
		'\n', '\x13', '\v', '\x15', '\f', '\x17', '\r', '\x19', '\xE', '\x1B', 
		'\xF', '\x1D', '\x10', '\x1F', '\x11', '!', '\x12', '#', '\x13', '%', 
		'\x14', '\'', '\x15', ')', '\x16', '+', '\x17', '-', '\x18', '/', '\x19', 
		'\x31', '\x1A', '\x33', '\x1B', '\x35', '\x1C', '\x37', '\x1D', '\x39', 
		'\x1E', ';', '\x1F', '=', ' ', '?', '!', '\x41', '\"', '\x43', '#', '\x45', 
		'$', 'G', '%', 'I', '&', 'K', '\'', 'M', '(', 'O', ')', 'Q', '*', 'S', 
		'+', 'U', ',', '\x3', '\x2', '\b', '\x5', '\x2', '\x43', '\\', '\x63', 
		'|', '\x629', '\x64C', '\b', '\x2', '\x32', ';', '\x43', '\\', '\x61', 
		'\x61', '\x63', '|', '\x629', '\x64C', '\x662', '\x66B', '\x3', '\x2', 
		'\x663', '\x66B', '\x3', '\x2', '\x662', '\x66B', '\x3', '\x2', '\x33', 
		';', '\x3', '\x2', '\x32', ';', '\x2', '\x104', '\x2', '\x3', '\x3', '\x2', 
		'\x2', '\x2', '\x2', '\x5', '\x3', '\x2', '\x2', '\x2', '\x2', '\a', '\x3', 
		'\x2', '\x2', '\x2', '\x2', '\t', '\x3', '\x2', '\x2', '\x2', '\x2', '\v', 
		'\x3', '\x2', '\x2', '\x2', '\x2', '\r', '\x3', '\x2', '\x2', '\x2', '\x2', 
		'\xF', '\x3', '\x2', '\x2', '\x2', '\x2', '\x11', '\x3', '\x2', '\x2', 
		'\x2', '\x2', '\x13', '\x3', '\x2', '\x2', '\x2', '\x2', '\x15', '\x3', 
		'\x2', '\x2', '\x2', '\x2', '\x17', '\x3', '\x2', '\x2', '\x2', '\x2', 
		'\x19', '\x3', '\x2', '\x2', '\x2', '\x2', '\x1B', '\x3', '\x2', '\x2', 
		'\x2', '\x2', '\x1D', '\x3', '\x2', '\x2', '\x2', '\x2', '\x1F', '\x3', 
		'\x2', '\x2', '\x2', '\x2', '!', '\x3', '\x2', '\x2', '\x2', '\x2', '#', 
		'\x3', '\x2', '\x2', '\x2', '\x2', '%', '\x3', '\x2', '\x2', '\x2', '\x2', 
		'\'', '\x3', '\x2', '\x2', '\x2', '\x2', ')', '\x3', '\x2', '\x2', '\x2', 
		'\x2', '+', '\x3', '\x2', '\x2', '\x2', '\x2', '-', '\x3', '\x2', '\x2', 
		'\x2', '\x2', '/', '\x3', '\x2', '\x2', '\x2', '\x2', '\x31', '\x3', '\x2', 
		'\x2', '\x2', '\x2', '\x33', '\x3', '\x2', '\x2', '\x2', '\x2', '\x35', 
		'\x3', '\x2', '\x2', '\x2', '\x2', '\x37', '\x3', '\x2', '\x2', '\x2', 
		'\x2', '\x39', '\x3', '\x2', '\x2', '\x2', '\x2', ';', '\x3', '\x2', '\x2', 
		'\x2', '\x2', '=', '\x3', '\x2', '\x2', '\x2', '\x2', '?', '\x3', '\x2', 
		'\x2', '\x2', '\x2', '\x41', '\x3', '\x2', '\x2', '\x2', '\x2', '\x43', 
		'\x3', '\x2', '\x2', '\x2', '\x2', '\x45', '\x3', '\x2', '\x2', '\x2', 
		'\x2', 'G', '\x3', '\x2', '\x2', '\x2', '\x2', 'I', '\x3', '\x2', '\x2', 
		'\x2', '\x2', 'K', '\x3', '\x2', '\x2', '\x2', '\x2', 'M', '\x3', '\x2', 
		'\x2', '\x2', '\x2', 'O', '\x3', '\x2', '\x2', '\x2', '\x2', 'Q', '\x3', 
		'\x2', '\x2', '\x2', '\x2', 'S', '\x3', '\x2', '\x2', '\x2', '\x2', 'U', 
		'\x3', '\x2', '\x2', '\x2', '\x3', 'W', '\x3', '\x2', '\x2', '\x2', '\x5', 
		']', '\x3', '\x2', '\x2', '\x2', '\a', '\x64', '\x3', '\x2', '\x2', '\x2', 
		'\t', 'k', '\x3', '\x2', '\x2', '\x2', '\v', 'r', '\x3', '\x2', '\x2', 
		'\x2', '\r', 't', '\x3', '\x2', '\x2', '\x2', '\xF', 'v', '\x3', '\x2', 
		'\x2', '\x2', '\x11', 'x', '\x3', '\x2', '\x2', '\x2', '\x13', 'z', '\x3', 
		'\x2', '\x2', '\x2', '\x15', '|', '\x3', '\x2', '\x2', '\x2', '\x17', 
		'~', '\x3', '\x2', '\x2', '\x2', '\x19', '\x80', '\x3', '\x2', '\x2', 
		'\x2', '\x1B', '\x82', '\x3', '\x2', '\x2', '\x2', '\x1D', '\x84', '\x3', 
		'\x2', '\x2', '\x2', '\x1F', '\x86', '\x3', '\x2', '\x2', '\x2', '!', 
		'\x88', '\x3', '\x2', '\x2', '\x2', '#', '\x8B', '\x3', '\x2', '\x2', 
		'\x2', '%', '\x8F', '\x3', '\x2', '\x2', '\x2', '\'', '\x92', '\x3', '\x2', 
		'\x2', '\x2', ')', '\x95', '\x3', '\x2', '\x2', '\x2', '+', '\x98', '\x3', 
		'\x2', '\x2', '\x2', '-', '\x9A', '\x3', '\x2', '\x2', '\x2', '/', '\x9C', 
		'\x3', '\x2', '\x2', '\x2', '\x31', '\x9F', '\x3', '\x2', '\x2', '\x2', 
		'\x33', '\xA2', '\x3', '\x2', '\x2', '\x2', '\x35', '\xA4', '\x3', '\x2', 
		'\x2', '\x2', '\x37', '\xA6', '\x3', '\x2', '\x2', '\x2', '\x39', '\xA8', 
		'\x3', '\x2', '\x2', '\x2', ';', '\xAA', '\x3', '\x2', '\x2', '\x2', '=', 
		'\xAF', '\x3', '\x2', '\x2', '\x2', '?', '\xB5', '\x3', '\x2', '\x2', 
		'\x2', '\x41', '\xBA', '\x3', '\x2', '\x2', '\x2', '\x43', '\xC1', '\x3', 
		'\x2', '\x2', '\x2', '\x45', '\xC4', '\x3', '\x2', '\x2', '\x2', 'G', 
		'\xCA', '\x3', '\x2', '\x2', '\x2', 'I', '\xCF', '\x3', '\x2', '\x2', 
		'\x2', 'K', '\xD5', '\x3', '\x2', '\x2', '\x2', 'M', '\xDC', '\x3', '\x2', 
		'\x2', '\x2', 'O', '\xE4', '\x3', '\x2', '\x2', '\x2', 'Q', '\xEB', '\x3', 
		'\x2', '\x2', '\x2', 'S', '\xF3', '\x3', '\x2', '\x2', '\x2', 'U', '\xFA', 
		'\x3', '\x2', '\x2', '\x2', 'W', 'X', '\a', 'J', '\x2', '\x2', 'X', 'Y', 
		'\a', 'g', '\x2', '\x2', 'Y', 'Z', '\a', 'n', '\x2', '\x2', 'Z', '[', 
		'\a', 'n', '\x2', '\x2', '[', '\\', '\a', 'q', '\x2', '\x2', '\\', '\x4', 
		'\x3', '\x2', '\x2', '\x2', ']', '\x61', '\t', '\x2', '\x2', '\x2', '^', 
		'`', '\t', '\x3', '\x2', '\x2', '_', '^', '\x3', '\x2', '\x2', '\x2', 
		'`', '\x63', '\x3', '\x2', '\x2', '\x2', '\x61', '_', '\x3', '\x2', '\x2', 
		'\x2', '\x61', '\x62', '\x3', '\x2', '\x2', '\x2', '\x62', '\x6', '\x3', 
		'\x2', '\x2', '\x2', '\x63', '\x61', '\x3', '\x2', '\x2', '\x2', '\x64', 
		'h', '\t', '\x4', '\x2', '\x2', '\x65', 'g', '\t', '\x5', '\x2', '\x2', 
		'\x66', '\x65', '\x3', '\x2', '\x2', '\x2', 'g', 'j', '\x3', '\x2', '\x2', 
		'\x2', 'h', '\x66', '\x3', '\x2', '\x2', '\x2', 'h', 'i', '\x3', '\x2', 
		'\x2', '\x2', 'i', '\b', '\x3', '\x2', '\x2', '\x2', 'j', 'h', '\x3', 
		'\x2', '\x2', '\x2', 'k', 'o', '\t', '\x6', '\x2', '\x2', 'l', 'n', '\t', 
		'\a', '\x2', '\x2', 'm', 'l', '\x3', '\x2', '\x2', '\x2', 'n', 'q', '\x3', 
		'\x2', '\x2', '\x2', 'o', 'm', '\x3', '\x2', '\x2', '\x2', 'o', 'p', '\x3', 
		'\x2', '\x2', '\x2', 'p', '\n', '\x3', '\x2', '\x2', '\x2', 'q', 'o', 
		'\x3', '\x2', '\x2', '\x2', 'r', 's', '\a', '*', '\x2', '\x2', 's', '\f', 
		'\x3', '\x2', '\x2', '\x2', 't', 'u', '\a', '+', '\x2', '\x2', 'u', '\xE', 
		'\x3', '\x2', '\x2', '\x2', 'v', 'w', '\a', ']', '\x2', '\x2', 'w', '\x10', 
		'\x3', '\x2', '\x2', '\x2', 'x', 'y', '\a', '_', '\x2', '\x2', 'y', '\x12', 
		'\x3', '\x2', '\x2', '\x2', 'z', '{', '\a', '}', '\x2', '\x2', '{', '\x14', 
		'\x3', '\x2', '\x2', '\x2', '|', '}', '\a', '\x7F', '\x2', '\x2', '}', 
		'\x16', '\x3', '\x2', '\x2', '\x2', '~', '\x7F', '\a', '-', '\x2', '\x2', 
		'\x7F', '\x18', '\x3', '\x2', '\x2', '\x2', '\x80', '\x81', '\a', '/', 
		'\x2', '\x2', '\x81', '\x1A', '\x3', '\x2', '\x2', '\x2', '\x82', '\x83', 
		'\a', '\xD9', '\x2', '\x2', '\x83', '\x1C', '\x3', '\x2', '\x2', '\x2', 
		'\x84', '\x85', '\a', '\xF9', '\x2', '\x2', '\x85', '\x1E', '\x3', '\x2', 
		'\x2', '\x2', '\x86', '\x87', '\a', '\x66C', '\x2', '\x2', '\x87', ' ', 
		'\x3', '\x2', '\x2', '\x2', '\x88', '\x89', '\a', '>', '\x2', '\x2', '\x89', 
		'\x8A', '\a', '>', '\x2', '\x2', '\x8A', '\"', '\x3', '\x2', '\x2', '\x2', 
		'\x8B', '\x8C', '\a', '@', '\x2', '\x2', '\x8C', '\x8D', '\a', '@', '\x2', 
		'\x2', '\x8D', '\x8E', '\a', '@', '\x2', '\x2', '\x8E', '$', '\x3', '\x2', 
		'\x2', '\x2', '\x8F', '\x90', '\a', '@', '\x2', '\x2', '\x90', '\x91', 
		'\a', '@', '\x2', '\x2', '\x91', '&', '\x3', '\x2', '\x2', '\x2', '\x92', 
		'\x93', '\a', '>', '\x2', '\x2', '\x93', '\x94', '\a', '?', '\x2', '\x2', 
		'\x94', '(', '\x3', '\x2', '\x2', '\x2', '\x95', '\x96', '\a', '@', '\x2', 
		'\x2', '\x96', '\x97', '\a', '?', '\x2', '\x2', '\x97', '*', '\x3', '\x2', 
		'\x2', '\x2', '\x98', '\x99', '\a', '>', '\x2', '\x2', '\x99', ',', '\x3', 
		'\x2', '\x2', '\x2', '\x9A', '\x9B', '\a', '@', '\x2', '\x2', '\x9B', 
		'.', '\x3', '\x2', '\x2', '\x2', '\x9C', '\x9D', '\a', '?', '\x2', '\x2', 
		'\x9D', '\x9E', '\a', '?', '\x2', '\x2', '\x9E', '\x30', '\x3', '\x2', 
		'\x2', '\x2', '\x9F', '\xA0', '\a', '#', '\x2', '\x2', '\xA0', '\xA1', 
		'\a', '?', '\x2', '\x2', '\xA1', '\x32', '\x3', '\x2', '\x2', '\x2', '\xA2', 
		'\xA3', '\a', '?', '\x2', '\x2', '\xA3', '\x34', '\x3', '\x2', '\x2', 
		'\x2', '\xA4', '\xA5', '\a', '\x30', '\x2', '\x2', '\xA5', '\x36', '\x3', 
		'\x2', '\x2', '\x2', '\xA6', '\xA7', '\a', '\x60E', '\x2', '\x2', '\xA7', 
		'\x38', '\x3', '\x2', '\x2', '\x2', '\xA8', '\xA9', '\a', '\x61D', '\x2', 
		'\x2', '\xA9', ':', '\x3', '\x2', '\x2', '\x2', '\xAA', '\xAB', '\a', 
		'\x631', '\x2', '\x2', '\xAB', '\xAC', '\a', '\x629', '\x2', '\x2', '\xAC', 
		'\xAD', '\a', '\x646', '\x2', '\x2', '\xAD', '\xAE', '\a', '\x62B', '\x2', 
		'\x2', '\xAE', '<', '\x3', '\x2', '\x2', '\x2', '\xAF', '\xB0', '\a', 
		'\x63B', '\x2', '\x2', '\xB0', '\xB1', '\a', '\x647', '\x2', '\x2', '\xB1', 
		'\xB2', '\a', '\x646', '\x2', '\x2', '\xB2', '\xB3', '\a', '\x64C', '\x2', 
		'\x2', '\xB3', '\xB4', '\a', '\x62B', '\x2', '\x2', '\xB4', '>', '\x3', 
		'\x2', '\x2', '\x2', '\xB5', '\xB6', '\a', '\x633', '\x2', '\x2', '\xB6', 
		'\xB7', '\a', '\x62E', '\x2', '\x2', '\xB7', '\xB8', '\a', '\x64A', '\x2', 
		'\x2', '\xB8', '\xB9', '\a', '\x63B', '\x2', '\x2', '\xB9', '@', '\x3', 
		'\x2', '\x2', '\x2', '\xBA', '\xBB', '\a', '\x629', '\x2', '\x2', '\xBB', 
		'\xBC', '\a', '\x646', '\x2', '\x2', '\xBC', '\xBD', '\a', '\x648', '\x2', 
		'\x2', '\xBD', '\xBE', '\a', '\x629', '\x2', '\x2', '\xBE', '\xBF', '\a', 
		'\x62C', '\x2', '\x2', '\xBF', '\xC0', '\a', '\x62E', '\x2', '\x2', '\xC0', 
		'\x42', '\x3', '\x2', '\x2', '\x2', '\xC1', '\xC2', '\a', 'K', '\x2', 
		'\x2', '\xC2', '\xC3', '\a', 'H', '\x2', '\x2', '\xC3', '\x44', '\x3', 
		'\x2', '\x2', '\x2', '\xC4', '\xC5', '\a', 'Y', '\x2', '\x2', '\xC5', 
		'\xC6', '\a', 'J', '\x2', '\x2', '\xC6', '\xC7', '\a', 'K', '\x2', '\x2', 
		'\xC7', '\xC8', '\a', 'N', '\x2', '\x2', '\xC8', '\xC9', '\a', 'G', '\x2', 
		'\x2', '\xC9', '\x46', '\x3', '\x2', '\x2', '\x2', '\xCA', '\xCB', '\a', 
		'\x637', '\x2', '\x2', '\xCB', '\xCC', '\a', '\x62F', '\x2', '\x2', '\xCC', 
		'\xCD', '\a', '\x64C', '\x2', '\x2', '\xCD', '\xCE', '\a', '\x62F', '\x2', 
		'\x2', '\xCE', 'H', '\x3', '\x2', '\x2', '\x2', '\xCF', '\xD0', '\a', 
		'\x639', '\x2', '\x2', '\xD0', '\xD1', '\a', '\x62A', '\x2', '\x2', '\xD1', 
		'\xD2', '\a', '\x64C', '\x2', '\x2', '\xD2', '\xD3', '\a', '\x63B', '\x2', 
		'\x2', '\xD3', '\xD4', '\a', '\x64C', '\x2', '\x2', '\xD4', 'J', '\x3', 
		'\x2', '\x2', '\x2', '\xD5', '\xD6', '\a', '\x637', '\x2', '\x2', '\xD6', 
		'\xD7', '\a', '\x62F', '\x2', '\x2', '\xD7', '\xD8', '\a', '\x64C', '\x2', 
		'\x2', '\xD8', '\xD9', '\a', '\x62F', '\x2', '\x2', '\xD9', '\xDA', '\a', 
		'\x61', '\x2', '\x2', '\xDA', '\xDB', '\a', '\x663', '\x2', '\x2', '\xDB', 
		'L', '\x3', '\x2', '\x2', '\x2', '\xDC', '\xDD', '\a', '\x639', '\x2', 
		'\x2', '\xDD', '\xDE', '\a', '\x62A', '\x2', '\x2', '\xDE', '\xDF', '\a', 
		'\x64C', '\x2', '\x2', '\xDF', '\xE0', '\a', '\x63B', '\x2', '\x2', '\xE0', 
		'\xE1', '\a', '\x64C', '\x2', '\x2', '\xE1', '\xE2', '\a', '\x61', '\x2', 
		'\x2', '\xE2', '\xE3', '\a', '\x663', '\x2', '\x2', '\xE3', 'N', '\x3', 
		'\x2', '\x2', '\x2', '\xE4', '\xE5', '\a', '\x637', '\x2', '\x2', '\xE5', 
		'\xE6', '\a', '\x62F', '\x2', '\x2', '\xE6', '\xE7', '\a', '\x64C', '\x2', 
		'\x2', '\xE7', '\xE8', '\a', '\x62F', '\x2', '\x2', '\xE8', '\xE9', '\a', 
		'\x61', '\x2', '\x2', '\xE9', '\xEA', '\a', '\x664', '\x2', '\x2', '\xEA', 
		'P', '\x3', '\x2', '\x2', '\x2', '\xEB', '\xEC', '\a', '\x639', '\x2', 
		'\x2', '\xEC', '\xED', '\a', '\x62A', '\x2', '\x2', '\xED', '\xEE', '\a', 
		'\x64C', '\x2', '\x2', '\xEE', '\xEF', '\a', '\x63B', '\x2', '\x2', '\xEF', 
		'\xF0', '\a', '\x64C', '\x2', '\x2', '\xF0', '\xF1', '\a', '\x61', '\x2', 
		'\x2', '\xF1', '\xF2', '\a', '\x664', '\x2', '\x2', '\xF2', 'R', '\x3', 
		'\x2', '\x2', '\x2', '\xF3', '\xF4', '\a', '\x637', '\x2', '\x2', '\xF4', 
		'\xF5', '\a', '\x62F', '\x2', '\x2', '\xF5', '\xF6', '\a', '\x64C', '\x2', 
		'\x2', '\xF6', '\xF7', '\a', '\x62F', '\x2', '\x2', '\xF7', '\xF8', '\a', 
		'\x61', '\x2', '\x2', '\xF8', '\xF9', '\a', '\x66A', '\x2', '\x2', '\xF9', 
		'T', '\x3', '\x2', '\x2', '\x2', '\xFA', '\xFB', '\a', '\x639', '\x2', 
		'\x2', '\xFB', '\xFC', '\a', '\x62A', '\x2', '\x2', '\xFC', '\xFD', '\a', 
		'\x64C', '\x2', '\x2', '\xFD', '\xFE', '\a', '\x63B', '\x2', '\x2', '\xFE', 
		'\xFF', '\a', '\x64C', '\x2', '\x2', '\xFF', '\x100', '\a', '\x61', '\x2', 
		'\x2', '\x100', '\x101', '\a', '\x66A', '\x2', '\x2', '\x101', 'V', '\x3', 
		'\x2', '\x2', '\x2', '\x6', '\x2', '\x61', 'h', 'o', '\x2',
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
} // namespace AntlrOutput
